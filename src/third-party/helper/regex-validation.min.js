const regName = /^[a-zA-Z_\s]+$/i;
const regMail = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
const regPass = { 'lowercase': /[a-z]/g, 'uppercase': /[A-Z]/g, 'numeric': /[0-9]/g, 'special': /[^0-9a-zA-Z]/g };

const RegexValidation = {
    nameRegex(input) {
        if (input.length > 0) {
            if (regName.test(input)) {
                return { 'result': true, 'status': 'success', 'message': 'Name is correct' };
            } else {
                return { 'result': false, 'status': 'error', 'message': 'Name format is wrong' };
            }
        } else {
            return { 'result': false, 'status': 'error', 'message': 'Name cannot be empty' };
        }
    },
    mailRegex(input) {
        if (input.length > 0) {
            if (regMail.test(input)) {
                return { 'result': true, 'status': 'success', 'message': 'Email is correct' };
            } else {
                return { 'result': false, 'status': 'error', 'message': 'Email format is wrong' };
            }
        } else {
            return { 'result': false, 'status': 'error', 'message': 'Email cannot be empty' };
        }
    },
    passRegex(input) {
        let message = [];
        if (input.length > 0) {
            let lowercase = input.match(regPass.lowercase) || [];
            let uppercase = input.match(regPass.uppercase) || [];
            let numeric = input.match(regPass.numeric) || [];
            let special = input.match(regPass.special) || [];
            lowercase.length === 0 ? message.push('Requires lowercase characters') : '';
            uppercase.length === 0 ? message.push('Requires uppercase characters') : '';
            numeric.length === 0 ? message.push('Requires numeric characters') : '';
            special.length === 0 ? message.push('Requires special characters') : '';
            if (message.length === 0) {
                return { 'result': true, 'status': 'success', 'message': message };
            } else {
                return { 'result': false, 'status': 'error', 'message': message };
            }
        } else {
            return { 'result': false, 'status': 'error', 'message': message.push('Password cannot be empty') };
        }
    }
};
export default RegexValidation;